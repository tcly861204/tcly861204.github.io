var shut = [
	   {        //第一关
	        map:[
		        [2,2,2,2,2,2,2,2,2,2,2,2,2,2],
				[2,1,1,1,1,1,1,1,1,1,1,1,1,2],
				[2,1,1,1,1,1,1,1,1,1,1,1,1,2],
				[2,1,1,1,1,1,1,4,1,1,1,3,1,2],
				[2,1,1,1,1,1,1,1,1,1,1,1,1,2],
				[2,1,1,1,1,1,1,1,1,1,1,1,1,2],
				[2,2,2,2,2,2,2,2,2,2,2,2,2,2]
		    ],
			box:[
				{x:5,y:3}
			],
			person:{
			    x:3,
				y:3
			}
	   },
	   {        //第二关
	        map:[
		        [0,0,0,2,2,2,0,0],
				[0,0,0,2,4,2,0,0],
				[2,2,2,2,1,2,0,0],
				[2,4,1,1,1,2,2,2],
				[2,2,2,1,1,1,4,2],
				[0,0,2,1,2,2,2,2],
				[0,0,2,4,2,0,0,0],
				[0,0,2,2,2,0,0,0]
		    ],
			box:[
				{x:2,y:3},
				{x:4,y:3},
				{x:4,y:4},
				{x:3,y:5}
			],
			person:{
			    x:3,
				y:4
			}
	   },
	   {        //第三关
	        map:[
		        [2,2,2,2,2,0,0,0,0],
				[2,1,1,1,2,0,0,0,0],
				[2,1,1,1,2,0,2,2,2],
				[2,1,1,1,2,0,2,4,2],
				[2,2,2,1,2,2,2,4,2],
				[0,2,2,1,1,1,1,4,2],
				[0,2,1,1,1,2,1,1,2],
				[0,2,1,1,1,2,2,2,2],
				[0,2,2,2,2,2,0,0,0]
		    ],
			box:[
				{x:2,y:2},
				{x:2,y:3},
				{x:3,y:2}
			],
			person:{
			    x:1,
				y:1
			}
	   },
	   {        //第四关
	        map:[
		        [0,2,2,2,2,2,2,2,0,0],
				[0,2,1,1,1,1,1,2,2,2],
				[2,2,1,2,2,2,1,1,1,2],
				[2,1,1,1,1,1,1,1,1,2],
				[2,1,4,4,2,1,1,1,2,2],
				[2,2,4,4,2,1,1,1,2,0],
				[0,2,2,2,2,2,2,2,2,0]
		    ],
			box:[
				{x:2,y:2},
				{x:4,y:3},
				{x:7,y:3},
				{x:6,y:4}
			],
			person:{
			    x:2,
				y:3
			}
	   },
	   {        //第五关
	        map:[
		        [0,2,2,2,2,0],
				[2,2,1,1,2,0],
				[2,1,1,1,2,0],
				[2,2,1,1,2,2],
				[2,2,1,1,1,2],
				[2,4,1,1,1,2],
				[2,4,4,3,4,2],
				[2,2,2,2,2,2]
		    ],
			box:[
				{x:2,y:2},
				{x:2,y:3},
				{x:2,y:5},
				{x:3,y:4}
			],
			person:{
			    x:1,
				y:2
			}
	   },
	   {        //第六关
	        map:[
		        [0,2,2,2,2,2,0,0],
				[0,2,1,1,2,2,2,0],
				[0,2,1,1,1,1,2,0],
				[2,2,2,1,2,1,2,2],
				[2,4,2,1,2,1,1,2],
				[2,4,1,1,1,2,1,2],
				[2,4,1,1,1,1,1,2],
				[2,2,2,2,2,2,2,2]
		    ],
			box:[
				{x:3,y:2},
				{x:2,y:5},
				{x:5,y:6},
			],
			person:{
			    x:2,
				y:1
			}
	   },
	   {        //第七关
	        map:[
		        [0,0,0,2,2,2,2,2,2,2],
				[0,0,2,2,1,1,2,1,1,2],
				[0,0,2,1,1,1,2,1,1,2],
				[0,0,2,1,1,1,1,1,1,2],
				[0,0,2,1,1,2,2,1,1,2],
				[2,2,2,1,1,1,2,1,2,2],
				[2,4,4,4,4,4,1,1,2,0],
				[2,2,2,2,2,2,2,2,2,0]
		    ],
			box:[
				{x:3,y:3},
				{x:5,y:3},
				{x:7,y:3},
				{x:4,y:4},
				{x:4,y:5}
			],
			person:{
			    x:8,
				y:1
			}
	   },
	   {        //第八关
	        map:[
		        [0,0,0,2,2,2,2,2,2,0],
				[0,2,2,2,1,1,1,1,2,0],
				[2,2,4,1,1,2,2,1,2,2],
				[2,4,4,1,1,1,1,1,1,2],
				[2,4,4,1,1,1,1,1,2,2],
				[2,2,2,2,2,2,1,1,2,0],
				[0,0,0,0,0,2,2,2,2,0]
		    ],
			box:[
				{x:4,y:2},
				{x:3,y:3},
				{x:5,y:3},
				{x:4,y:4},
				{x:6,y:4}
			],
			person:{
			    x:8,
				y:3
			}
	   },
	   {        //第九关
	        map:[
		        [0,2,2,2,2,2,2,2,2,2,0],
				[0,2,1,1,2,2,1,1,1,2,0],
				[0,2,1,1,1,1,1,1,1,2,0],
				[0,2,1,1,2,2,2,1,1,2,0],
				[0,2,1,2,4,4,4,2,1,2,0],
				[2,2,1,2,4,4,4,2,1,2,2],
				[2,1,1,1,1,1,1,1,1,1,2],
				[2,1,1,1,1,1,2,1,1,1,2],
				[2,2,2,2,2,2,2,2,2,2,2]
		    ],
			box:[
				{x:2,y:3},
				{x:5,y:2},
				{x:8,y:3},
				{x:2,y:6},
				{x:5,y:6},
				{x:8,y:6}
			],
			person:{
			    x:8,
				y:7
			}
	   }  
];



//兼容IE低版本
if(!Array.indexOf){
	Array.prototype.indexOf = function(){
		for(var i=0;i<this.length;i++){
		   if(this[i]===arguments[0])
			   return i;
		   else{
				if(i===(this.length-1))
					 return -1;
		   }
	   }
	};
}
var Game = {
    shut:shut,
	pass:0,
	W:27,
	H:27,
    init:function(){
	    this.parentNode = document.getElementById('game');
		this.levelNode = document.getElementById('level');
		this.moveNode = document.getElementById('moves');
		this.pusheNode = document.getElementById('pushes');
		var imgListNode = this.parentNode.getElementsByTagName('img');
		var spanNode = this.parentNode.getElementsByTagName('span');
		if(imgListNode.length){
		    var i=imgListNode.length;
		    while (i>0)
			{
			    this.parentNode.removeChild(imgListNode[0]);
			    i--;
			}
			this.pass++;
			this.parentNode.removeChild(spanNode[0]);
		}
		this.levelNode.innerText=this.pass+1;
		this.moveNode.innerText=0;
		this.pusheNode.innerText=0;
		this.createMap();
		this.disArr = [];
		for(var i=0;i<this.shut[this.pass].map.length;i++){
		    for(var j=0;j<this.shut[this.pass].map[i].length;j++){
				if(this.shut[this.pass].map[i][j]===4){
				    var str = j+'^'+i;
				    this.disArr.push(str);
				}
		    }
		}
	},
	createMap:function(){
	    this.parentNode.style.width=this.shut[this.pass].map[0].length*this.W+'px';
		this.parentNode.style.height=this.shut[this.pass].map.length*this.H+'px';
		this.parentNode.style.left = (document.documentElement.clientWidth-this.shut[this.pass].map[0].length*this.W)/2+'px';
		this.parentNode.style.top = (document.documentElement.clientHeight-this.shut[this.pass].map.length*this.H)/2-34+'px';
		for(var i=0;i<this.shut[this.pass].map.length;i++){
		    for(var j=0;j<this.shut[this.pass].map[i].length;j++){
				this.showBox(i,j,this.shut[this.pass].map[i][j]);
		    }
		}
		this.createBox();
	},
	createBox : function(){
	    for(var i=0;i<this.shut[this.pass].box.length;i++){
		    this.showBox(this.shut[this.pass].box[i].y,this.shut[this.pass].box[i].x,5,'box');
		}
	    this.createPerson();
	},
	createPerson:function(){
	    var oPson = document.createElement('span');
			oPson.style.top = this.shut[this.pass].person.y*this.W+'px';
			oPson.style.left = this.shut[this.pass].person.x*this.H+ 'px';
			oPson.className = 'pull';
			oPson.setAttribute('data-run-x',this.shut[this.pass].person.x);
			oPson.setAttribute('data-run-y',this.shut[this.pass].person.y);
			this.parentNode.appendChild(oPson);
		this.eventKey(oPson);
	},
	runPerson:function(obj,dir){
	    var x = obj.getAttribute('data-run-x')*1,
		    y = obj.getAttribute('data-run-y')*1,
			disX=x,
			disY=y,
		    _this = this;	
		switch(dir){
		    case 'L':
			    disX = x-1;
			    if(_this.checkMove(disX,disY)){
			        obj.style.left = disX*_this.W+'px';
					obj.setAttribute('data-run-x',disX);
					this.moveNode.innerText=this.moveNode.innerText*1+1;
					var checkObj = _this.getBoxPact(obj);
					if(checkObj.checkBox){
					    if(_this.isBoxdis(disY,disX-1) && (this.shut[this.pass].map[disY][disX-1]===1 || this.shut[this.pass].map[disY][disX-1]===4)){
						    var arr = checkObj.ImgNode;
							arr[0].style.left = (arr[1]*1-1)*_this.W+'px';
							arr[0].setAttribute('box-dis-x',arr[1]*1-1);
							this.pusheNode.innerText=this.pusheNode.innerText*1+1;
							_this.checkPass();
						}else{
						    obj.style.left = (disX+1)*_this.W+'px';
							obj.setAttribute('data-run-x',disX+1);
							this.moveNode.innerText=this.moveNode.innerText*1-1;
						}
					}
			    }
			   break;
			case 'T':
			    disY = y-1;
			    if(_this.checkMove(disX,disY)){
			        obj.style.top = disY*_this.H+'px';
					obj.setAttribute('data-run-y',disY);
					this.moveNode.innerText=this.moveNode.innerText*1+1;
					var checkObj = _this.getBoxPact(obj);
					if(checkObj.checkBox){
					    if(_this.isBoxdis(disY-1,disX) && (this.shut[this.pass].map[disY-1][disX]===1 || this.shut[this.pass].map[disY-1][disX]===4)){
						    var arr = checkObj.ImgNode;
							arr[0].style.top = (arr[2]*1-1)*_this.H+'px';
							arr[0].setAttribute('box-dis-y',arr[2]*1-1);
							this.pusheNode.innerText=this.pusheNode.innerText*1+1;
							_this.checkPass();
						}else{
						    obj.style.top = (disY+1)*_this.W+'px';
							obj.setAttribute('data-run-y',disY+1);
							this.moveNode.innerText=this.moveNode.innerText*1-1;
						}
					}
			    }
			   break;
			case 'R':
			    disX = x+1;
			    if(_this.checkMove(disX,disY)){
				    obj.style.left = disX*_this.W+'px';
					obj.setAttribute('data-run-x',disX);
                    this.moveNode.innerText=this.moveNode.innerText*1+1;
					var checkObj = _this.getBoxPact(obj);
					if(checkObj.checkBox){
					    if(_this.isBoxdis(disY,disX+1) && (this.shut[this.pass].map[disY][disX+1]===1 || this.shut[this.pass].map[disY][disX+1]===4)){
						    var arr = checkObj.ImgNode;
							arr[0].style.left = (arr[1]*1+1)*_this.W+'px';
							arr[0].setAttribute('box-dis-x',arr[1]*1+1);
							this.pusheNode.innerText=this.pusheNode.innerText*1+1;
							_this.checkPass();
						}else{
						    obj.style.left = (disX-1)*_this.W+'px';
							obj.setAttribute('data-run-x',disX-1);
							this.moveNode.innerText=this.moveNode.innerText*1-1;
						}
					}
			    }
			   break;
			case 'D':
			    disY = y+1;
			    if(_this.checkMove(disX,disY)){
			        obj.style.top = disY*_this.H+'px';
					obj.setAttribute('data-run-y',disY);
					this.moveNode.innerText=this.moveNode.innerText*1+1;
					var checkObj = _this.getBoxPact(obj);
					if(checkObj.checkBox){
					    if(_this.isBoxdis(disY+1,disX) && (this.shut[this.pass].map[disY+1][disX]===1 || this.shut[this.pass].map[disY+1][disX]===4)){
						    var arr = checkObj.ImgNode;
							arr[0].style.top = (arr[2]*1+1)*_this.H+'px';
							arr[0].setAttribute('box-dis-y',arr[2]*1+1);
							this.pusheNode.innerText=this.pusheNode.innerText*1+1;
							_this.checkPass();
						}else{
						    obj.style.top = (disY-1)*_this.W+'px';
							obj.setAttribute('data-run-y',disY-1);
							this.moveNode.innerText=this.moveNode.innerText*1-1;
						}
					}
			    }
			   break;
		}
	},
	checkPass:function(){
	    var boxList = this.getBoxArr();
		var iNum = 0,_this = this;
		for(var i=0;i<boxList.length;i++){
		    var x = boxList[i][0].getAttribute('box-dis-x')*1,
			    y = boxList[i][0].getAttribute('box-dis-y')*1;
			var str = x+'^'+y;
			if(this.disArr.indexOf(str)>-1){
			    iNum++;
			}
		}
		if(iNum===this.disArr.length){
		    var iNow = 0,timer = null;
		    timer = setInterval(function(){
			    if(iNow===10){
				    clearInterval(timer);
					alert('恭喜您！');
					_this.init();
				}
			    iNow++;
			    for(var i=0;i<boxList.length;i++){
					if(iNow%2){
				        boxList[i][0].src="images/3.jpg";
					}else{
					    boxList[i][0].src="images/5.jpg";
					}
				}
			},100);
		}
	},
	isBoxdis:function(x,y){
	    var iNum = 0;
		var boxList = this.getBoxArr();
	    for(var i=0;i<boxList.length;i++){
		    if(boxList[i][0].getAttribute('box-dis-x') === (y+'') && boxList[i][0].getAttribute('box-dis-y') === (x+'')){
			    iNum++;
			}
		}
		if(iNum){
		    return false;
		}else{
		    return true;
		}
	},
	getBoxArr:function(){
	    var ImgList = this.parentNode.getElementsByTagName('img'),
		    boxList = [];
		for(i=0;i<ImgList.length;i++){
		    if(ImgList[i].getAttribute('class')==='box'){
			    var arr=[];
				arr[0] = ImgList[i];
				arr[1] = ImgList[i].getAttribute('box-dis-x');
				arr[2] = ImgList[i].getAttribute('box-dis-y');
			    boxList.push(arr);
			}
		}
		return boxList;
	},
	getBoxPact:function(obj){
	    var boxList = this.getBoxArr();
		var iNum=-1;
		for(var i=0;i<boxList.length;i++){
		    if(this.impact(obj,boxList[i])){
			    iNum=i;
				break;
			}
		}
		if(iNum>=0){
		    return {
			    checkBox : true, 
			    ImgNode : boxList[iNum]
			}
		}else{
		    return {
			    checkBox : false
			}
		}
	},
	checkMove:function(disX,disY){
	    if(this.shut[this.pass].map[disY][disX]===2 || this.shut[this.pass].map[disY][disX]===3){
		    return false;
		}
		return true;
	},
	eventKey:function(obj){
	    var _this = this;
		document.onkeydown = function(ev){
		    var e= ev || window.event;
            switch(e.keyCode){
			    case 37:
				   obj.style.backgroundPosition = '-81px 0';
				   _this.runPerson(obj,'L');
				   break;
				case 38:
				   obj.style.backgroundPosition = '-54px 0';
				   _this.runPerson(obj,'T');
				   break;
				case 39:
				   obj.style.backgroundPosition = '-27px 0';
				   _this.runPerson(obj,'R');
				   break;
				case 40:
				   obj.style.backgroundPosition = '0 0';
				   _this.runPerson(obj,'D');
				   break;
				default :
				   break;
			}			
		};
	},
	showBox : function(i,j,iNum,cls){
	    if(iNum!==0){
	        var OImg = document.createElement('img');
			OImg.style.top = i*this.W+'px';
			OImg.style.left = j*this.H+ 'px';
			if(cls){
			    OImg.className = cls;
			    OImg.setAttribute('box-dis-x',j);
				OImg.setAttribute('box-dis-y',i);
			}
			OImg.src = 'images/'+iNum+'.jpg';					
			this.parentNode.appendChild(OImg);
		}
	},
	impact : function(runObj,disObj){
	    if(runObj.getAttribute('data-run-x') === disObj[1] && runObj.getAttribute('data-run-y') === disObj[2]){
		    return true;
		}else{
		    return false;
		}
	}
};

